- name: Ensure 'acl' package is installed for permission management
  apt:
    name: acl
    state: present
    update_cache: yes
  become: yes

- name: Install Python dependencies for PostgreSQL modules
  become: yes
  apt:
    name:
      - python3-psycopg2
      - python3-pip
      - libpq-dev
      - python3-dev
    state: present
    update_cache: yes

- name: Install psycopg2 Python package via pip
  become: yes
  pip:
    name: psycopg2-binary
    executable: pip3

- name: Install PostgreSQL packages on replica
  apt:
    name:
      - postgresql-12
      - postgresql-contrib-12
    state: present
    update_cache: yes

- name: Wait for block device /dev/nvme1n1
  wait_for:
    path: /dev/nvme1n1
    state: present
    timeout: 30

- name: Format block device if needed
  command: mkfs.ext4 /dev/nvme1n1
  args:
    creates: /dev/disk/by-uuid/nvme1n1
  ignore_errors: yes


- name: Create mount point
  file:
    path: /var/lib/postgresql/12/main
    state: directory
    owner: postgres
    group: postgres
    mode: '0755'
  become: yes

- name: Mount block device
  mount:
    path: /var/lib/postgresql/12/main
    src: /dev/nvme1n1
    fstype: ext4
    opts: defaults,nofail
    state: mounted
  become: yes

- name: Check if replica data directory is initialized
  stat:
    path: /var/lib/postgresql/12/main/PG_VERSION
  register: pg_data_version

- name: Fully clean data directory before base backup
  shell: "rm -rf /var/lib/postgresql/12/main/* /var/lib/postgresql/12/main/.* 2>/dev/null || true"
  become: yes
  when: not pg_data_version.stat.exists

- name: Stop PostgreSQL service
  service:
    name: postgresql
    state: stopped

- name: Configure postgresql.conf for replica
  lineinfile:
    path: /etc/postgresql/12/main/postgresql.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: '^wal_level', line: 'wal_level = replica' }
    - { regexp: '^max_wal_senders', line: 'max_wal_senders = 10' }
    - { regexp: '^wal_keep_segments', line: 'wal_keep_segments = 64' }
    - { regexp: '^listen_addresses', line: "listen_addresses = '*'" }
    - { regexp: '^\s*#?\s*primary_conninfo', line: "primary_conninfo = 'host={{ primary_private_ip }} user=replica password={{ replication_password }}'" }
  become: yes

- name: Perform base backup from primary
  become: yes
  become_user: postgres
  shell: |
    pg_basebackup -h {{ primary_private_ip }} -D /var/lib/postgresql/12/main -U replica -v -P --wal-method=stream
  environment:
    PGPASSWORD: "{{ replication_password }}"
  args:
    creates: /var/lib/postgresql/12/main/PG_VERSION

- name: Create standby.signal to enable standby mode (Postgres 12+)
  file:
    path: /var/lib/postgresql/12/main/standby.signal
    state: touch
    owner: postgres
    group: postgres

- name: Fix ownership and permissions recursively on data directory
  file:
    path: /var/lib/postgresql/12/main
    recurse: yes
    owner: postgres
    group: postgres
    mode: '0700'
  become: yes

- name: Start PostgreSQL service on replica
  service:
    name: postgresql
    state: started
    enabled: yes